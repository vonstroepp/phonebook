{"version":3,"sources":["services/persons.js","components/Filter.js","components/Numbers.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","person","delete","id","Filter","searchTerm","handleSearchChange","className","placeholder","onChange","value","Numbers","deleteName","name","number","onClick","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Notification","message","console","log","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchTerm","searchResults","setSearchResults","errorMessage","setErrorMessage","useEffect","personService","initialPersons","window","confirm","filter","item","setTimeout","catch","e","alert","results","toLowerCase","includes","event","target","preventDefault","personObject","find","element","returnedPerson","concat","map","key","date","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3913432.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => {\n        return response.data\n    })\n}\n\nconst createPerson = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => {\n        return response.data\n    })\n}\n\nconst updatePerson = (id, newPerson) => {\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\n    return request.then(response => {\n        return response.data\n    })\n}\n\nconst deletePerson = (person) => {\n    const request = axios.delete(`${baseUrl}/${person.id}`)\n    return request.then(response => {\n        return response.data\n    })\n}\n\nexport default { getAll, createPerson, updatePerson, deletePerson}","import React from 'react'\n\nfunction Filter({ searchTerm, handleSearchChange}) {\n    return (\n        <div className=\"filter\">\n            <h4>Type to search for a name</h4>\n            <input placeholder=\"type in lower caps\" \n                   onChange={ handleSearchChange } \n                   value={ searchTerm }/>\n        </div>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\n function Numbers ({  person, deleteName }) {\n\n    return  ( \n            <div className=\"numbers\">\n                <div>Name: { person.name }, Number: {person.number}</div> \n                <button onClick={ () => deleteName(person) }>Delete</button>\n            </div>\n        )\n    };\n\n export default Numbers;","import React from 'react'\n\nfunction PersonForm({ addName, newName, handleNameChange, newNumber, handleNumberChange }) {\n    return (\n        <form onSubmit={addName}>\n            <div>\n                Enter a new Name: <input value={ newName } onChange={ handleNameChange }/>\n            </div>\n            <div>\n                Enter a new Number: <input value={ newNumber } onChange={ handleNumberChange }/>\n            </div>\n            <div>\n                <button type=\"submit\">Add a new person</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nfunction Notification({ message }) {\n    console.log(message)\n    if(message === ''){\n        return null\n    }\n    return (\n        <div className='error'>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons';\nimport Filter from './components/Filter';\nimport Numbers from './components/Numbers';\nimport PersonForm from './components/PersonForm';\nimport Notification from './components/Notification';\nimport './App.css';\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([]); \n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const hook = () => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  };\n\n  useEffect(hook, []);\n\n  const addName = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    \n    const found = persons.find((element) => {\n      return element.name === personObject.name\n    });\n    \n    if (found){\n      \n        alert(`${personObject.name} already exists in the phonebook.`)\n      \n \n    } else {\n      personService\n        .createPerson(personObject)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewNumber('')\n        })\n        .catch(e => {\n          setErrorMessage(\n            'Error adding Name'\n          )\n          setTimeout(() => {\n            setErrorMessage('')\n          }, 5000)\n        })\n      }\n    }\n\n  const deleteName = (person) => {\n    const message = `Do you really want to delete ${person.name} ?`;\n    window.confirm(message) \n    ?\n    personService\n    .deletePerson(person)\n    .then(() => {\n      setPersons(persons.filter(item => item.id !== person.id))\n      setErrorMessage(\n        `${person.name} has been removed from the phone book`\n      )\n      setTimeout(() => {\n        setErrorMessage('')\n      }, 5000)\n    })\n    .catch(e => {\n      setErrorMessage(\n        'Could not remove contact'\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })\n    : \n    alert(`${person.name}: is not deleted from the pone book`)\n  }\n  \n  \n\n  const handleSearchChange = (event) => setSearchTerm(event.target.value);\n  useEffect(() => {\n    const results = persons.filter(person => person.name.toLowerCase().includes(searchTerm));\n    setSearchResults(results);\n  }, [searchTerm, persons])\n  \n  const handleNameChange = (event) => setNewName(event.target.value);\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\n\n  \n  return (\n    <div className=\"container\">\n      <h2>A Phonebook</h2>\n      <Notification message={ errorMessage } />\n      <Filter searchTerm={ searchTerm }\n              handleSearchChange = { handleSearchChange }\n      />\n      <br />\n      <PersonForm addName={ addName } \n                  newName={ newName } \n                  handleNameChange={ handleNameChange } \n                  newNumber = { newNumber }\n                  handleNumberChange = {handleNumberChange}\n      />          \n      <h2>Names and Numbers</h2>\n      {searchTerm === '' ? \n        persons.map((person) => <Numbers key={person.id}  person={ person } deleteName={() => deleteName(person)} />)\n        :\n        searchResults.map((person) => <Numbers key={person.id} person={ person } date={ person.date } deleteName={() => deleteName(person)} />)\n      }\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}